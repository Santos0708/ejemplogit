package ec.gob.digercic.wsintegracion;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.12.redhat-1
 * 2018-04-13T09:08:40.632-05:00
 * Generated source version: 3.1.12.redhat-1
 * 
 */
@WebServiceClient(name = "WSAutenticacionBeanService", 
                  wsdlLocation = "http://eap7desarrollo.srv.registrocivil.local:8080/ws-autenticacion-ejb/UsuariosWS?wsdl",
                  targetNamespace = "http://ws.wsautenticacionservice.digercic.gob.ec/") 
public class WSAutenticacionBeanService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.wsautenticacionservice.digercic.gob.ec/", "WSAutenticacionBeanService");
    public final static QName UsuariosWSPort = new QName("http://ws.wsautenticacionservice.digercic.gob.ec/", "UsuariosWSPort");
    static {
        URL url = null;
        try {
            url = new URL("http://eap7desarrollo.srv.registrocivil.local:8080/ws-autenticacion-ejb/UsuariosWS?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(WSAutenticacionBeanService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://eap7desarrollo.srv.registrocivil.local:8080/ws-autenticacion-ejb/UsuariosWS?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public WSAutenticacionBeanService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSAutenticacionBeanService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSAutenticacionBeanService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public WSAutenticacionBeanService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public WSAutenticacionBeanService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public WSAutenticacionBeanService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns WSAutenticacion
     */
    @WebEndpoint(name = "UsuariosWSPort")
    public WSAutenticacion getUsuariosWSPort() {
        return super.getPort(UsuariosWSPort, WSAutenticacion.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSAutenticacion
     */
    @WebEndpoint(name = "UsuariosWSPort")
    public WSAutenticacion getUsuariosWSPort(WebServiceFeature... features) {
        return super.getPort(UsuariosWSPort, WSAutenticacion.class, features);
    }

}
